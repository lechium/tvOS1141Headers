/*
* This header is generated by classdump-dyld 1.0
* on Friday, May 31, 2019 at 2:21:00 PM Mountain Standard Time
* Operating System: Version 11.3 (Build 15L211)
* Image Source: /System/Library/PrivateFrameworks/ATVSlideshow.framework/ATVSlideshow
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ATVSlideshow/ATVSlideshow-Structs.h>
#import <libobjc.A.dylib/MPActionableSupportInternal.h>
#import <libobjc.A.dylib/NSCoding.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/MPFilterSupport.h>
#import <libobjc.A.dylib/MPAudioSupport.h>
#import <libobjc.A.dylib/MPActionableSupport.h>

@class MCPlug, MCContainerParallelizer, NSMutableArray, NSMutableDictionary, MPTransition, MPLayer, MPAudioPlaylist, NSString;

@interface MPEffectContainer : NSObject <MPActionableSupportInternal, NSCoding, NSCopying, MPFilterSupport, MPAudioSupport, MPActionableSupport> {

	MCPlug* _containerPlug;
	MCContainerParallelizer* _containerParallelizer;
	NSMutableArray* _effects;
	NSMutableArray* _filters;
	NSMutableDictionary* _attributes;
	MPTransition* _transition;
	MPLayer* _parentLayer;
	MPAudioPlaylist* _audioPlaylist;
	BOOL _transitionDisconnected;
	double _startTime;
	double _duration;
	CGColorRef _backgroundColor;
	NSString* _uuid;

}

@property (assign,nonatomic) CGColorRef backgroundCGColor;              //@synthesize backgroundColor=_backgroundColor - In the implementation block
@property (nonatomic,retain) MPTransition * transition;                 //@synthesize transition=_transition - In the implementation block
@property (assign,nonatomic) double duration;                           //@synthesize duration=_duration - In the implementation block
+(BOOL)automaticallyNotifiesObserversForKey:(id)arg1 ;
+(id)effectContainer;
-(void)finalize;
-(void)dump;
-(void)addFilter:(id)arg1 ;
-(id)init;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(id)description;
-(double)duration;
-(void)setDuration:(double)arg1 ;
-(void)setStartTime:(double)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)container;
-(id)filters;
-(void)setTransition:(MPTransition *)arg1 ;
-(MPTransition *)transition;
-(double)startTime;
-(long long)index;
-(void)cleanup;
-(id)uuid;
-(void)addFilters:(id)arg1 ;
-(id)objectID;
-(id)parentDocument;
-(id)plugID;
-(void)copyVars:(id)arg1 ;
-(id)fullDebugLog;
-(id)parentLayer;
-(id)audioPlaylist;
-(void)setAudioPlaylist:(id)arg1 ;
-(long long)countOfEffects;
-(void)setBackgroundCGColor:(CGColorRef)arg1 ;
-(id)effects;
-(void)addEffect:(id)arg1 ;
-(double)introTransitionDuration;
-(void)setUserInfoAttribute:(id)arg1 forKey:(id)arg2 ;
-(id)userInfoAttributeForKey:(id)arg1 ;
-(double)outroTransitionDuration;
-(id)objectInEffectsAtIndex:(long long)arg1 ;
-(long long)slideCount;
-(long long)textCount;
-(void)removeEffectsAtIndices:(id)arg1 ;
-(id)plug;
-(CGColorRef)backgroundCGColor;
-(void)copyFilters:(id)arg1 ;
-(void)copyAudioPlaylist:(id)arg1 ;
-(BOOL)shouldBeParallelizer;
-(void)convertFromParallelizerToEffectContainer;
-(void)convertFromEffectContainerToParallelizer;
-(id)nearestLayerGroup;
-(double)findMinDuration;
-(void)calculateDurationToSmallest:(BOOL)arg1 ;
-(void)insertFilters:(id)arg1 atIndex:(long long)arg2 ;
-(void)removeFiltersAtIndices:(id)arg1 ;
-(void)removeAllFilters;
-(void)moveFiltersFromIndices:(id)arg1 toIndex:(long long)arg2 ;
-(long long)countOfFilters;
-(id)objectInFiltersAtIndex:(long long)arg1 ;
-(void)insertObject:(id)arg1 inFiltersAtIndex:(long long)arg2 ;
-(void)removeObjectFromFiltersAtIndex:(long long)arg1 ;
-(void)replaceObjectInFiltersAtIndex:(long long)arg1 withObject:(id)arg2 ;
-(void)copyEffects:(id)arg1 ;
-(void)copyTransition:(id)arg1 ;
-(void)insertEffects:(id)arg1 atIndex:(long long)arg2 ;
-(void)adjustPhasesWithDuration:(double)arg1 ;
-(BOOL)isTransitionConnected;
-(void)addEffects:(id)arg1 ;
-(void)removeAllEffects;
-(void)moveEffectsFromIndices:(id)arg1 toIndex:(long long)arg2 ;
-(void)setBackgroundColorString:(id)arg1 ;
-(void)disconnectTransition;
-(void)reconnectTransition;
-(void)setContainerPlug:(id)arg1 ;
-(void)setContainerParallelizer:(id)arg1 ;
-(void)setContainerEffect:(id)arg1 ;
-(void)setParentLayer:(id)arg1 ;
-(void)insertObject:(id)arg1 inEffectsAtIndex:(long long)arg2 ;
-(void)removeObjectFromEffectsAtIndex:(long long)arg1 ;
-(void)replaceObjectInEffectsAtIndex:(long long)arg1 withObject:(id)arg2 ;
-(id)scriptingTransition;
-(void)setScriptingTransition:(id)arg1 ;
@end

