/*
* This header is generated by classdump-dyld 1.0
* on Friday, May 31, 2019 at 2:13:55 PM Mountain Standard Time
* Operating System: Version 11.3 (Build 15L211)
* Image Source: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/ISStoreURLOperationDelegate.h>

@protocol OS_dispatch_queue;
@class SSBagProfileConfig, NSObject, NSDictionary, SSUniqueExecutionQueue, NSString, ISOperationQueue, NSDate, NSNumber;

@interface SSBag : NSObject <ISStoreURLOperationDelegate> {

	BOOL _ignoreDiskCacheOnNextBagLoad;
	SSBagProfileConfig* _profileConfig;
	NSObject*<OS_dispatch_queue> _accessQueue;
	NSDictionary* _backingDictionary;
	SSUniqueExecutionQueue* _loadBagQueue;
	NSString* _logKey;
	NSObject*<OS_dispatch_queue> _notificationsQueue;
	ISOperationQueue* _operationQueue;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> accessQueue;                                //@synthesize accessQueue=_accessQueue - In the implementation block
@property (nonatomic,retain) NSDictionary * backingDictionary;                                          //@synthesize backingDictionary=_backingDictionary - In the implementation block
@property (assign,nonatomic) BOOL ignoreDiskCacheOnNextBagLoad;                                         //@synthesize ignoreDiskCacheOnNextBagLoad=_ignoreDiskCacheOnNextBagLoad - In the implementation block
@property (nonatomic,readonly) SSUniqueExecutionQueue * loadBagQueue;                                   //@synthesize loadBagQueue=_loadBagQueue - In the implementation block
@property (nonatomic,readonly) NSString * logKey;                                                       //@synthesize logKey=_logKey - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> notificationsQueue;                         //@synthesize notificationsQueue=_notificationsQueue - In the implementation block
@property (nonatomic,retain) ISOperationQueue * operationQueue;                                         //@synthesize operationQueue=_operationQueue - In the implementation block
@property (getter=isExpired,nonatomic,readonly) BOOL expired; 
@property (nonatomic,readonly) NSDate * expirationDate; 
@property (nonatomic,readonly) SSBagProfileConfig * profileConfig;                                      //@synthesize profileConfig=_profileConfig - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSNumber * metricsLoadURLSessionDuration; 
@property (nonatomic,readonly) NSNumber * metricsLoadURLSamplingPercentage; 
@property (nonatomic,readonly) NSNumber * metricsLoadURLSamplingPercentageCachedResponses; 
+(id)_bagCacheAccessQueue;
+(id)_bagCache;
+(void)_assertIfProfileConfigIsMisconfigured:(id)arg1 ;
+(id)_cookieForName:(id)arg1 ;
+(id)_debugBackingDictionariesAccessQueue;
+(id)_debugBackingDictionaries;
+(BOOL)_value:(id)arg1 isKindOfValueType:(unsigned long long)arg2 ;
+(id)_overriddenURLCookieNames;
+(id)_defaultURLCookieNames;
+(id)_OSString;
+(id)_OSVersionString;
+(id)_deviceString;
+(id)_cookiesForNames:(id)arg1 ;
+(id)_URLBuildIdentifier;
+(id)_URLCookieNamesForProfile:(id)arg1 ;
+(id)_debugBackingDictionaryForProfileConfig:(id)arg1 ;
+(id)_processLoadBagOperation:(id)arg1 error:(id*)arg2 ;
+(void)_setURLCookieNames:(id)arg1 forProfile:(id)arg2 ;
+(void)_updateStorefrontSuffixIfNecessaryWithBagOutput:(id)arg1 logKey:(id)arg2 ;
+(BOOL)_shouldReloadBagForOriginalCookies:(id)arg1 newCookies:(id)arg2 ;
+(BOOL)_shouldReloadBagForSetStorefront:(id)arg1 bagOutput:(id)arg2 ;
+(id)_requestStorefrontFromURLResponse:(id)arg1 ;
+(id)_storefrontFromURLResponse:(id)arg1 bagOutput:(id)arg2 ;
+(BOOL)_isBackingDictionary:(id)arg1 equalToBackingDictionary:(id)arg2 ;
+(id)_storefrontSuffixFromBagOutput:(id)arg1 ;
+(id)bagWithProfileConfig:(id)arg1 ;
+(void)removeAllDebugBackingDictionaries;
+(void)setDebugBackingDictionary:(id)arg1 forProfileConfig:(id)arg2 ;
+(id)_callerVersionString;
-(id)_expirationDate;
-(NSDate *)expirationDate;
-(void)dealloc;
-(NSString *)description;
-(void)setOperationQueue:(ISOperationQueue *)arg1 ;
-(ISOperationQueue *)operationQueue;
-(id)arrayForKey:(id)arg1 error:(id*)arg2 ;
-(id)boolForKey:(id)arg1 error:(id*)arg2 ;
-(id)doubleForKey:(id)arg1 error:(id*)arg2 ;
-(id)integerForKey:(id)arg1 error:(id*)arg2 ;
-(id)stringForKey:(id)arg1 error:(id*)arg2 ;
-(id)URLForKey:(id)arg1 error:(id*)arg2 ;
-(id)dictionaryForKey:(id)arg1 error:(id*)arg2 ;
-(id)URLCacheID;
-(id)_initWithProfileConfig:(id)arg1 logKey:(id)arg2 ;
-(id)_loadBagIfNeeded;
-(id)_loadBagWithAttempt:(unsigned long long)arg1 error:(id*)arg2 ;
-(void)_deviceStorefrontChanged:(id)arg1 ;
-(BOOL)_isExpired;
-(void)setBackingDictionary:(NSDictionary *)arg1 ;
-(void)setIgnoreDiskCacheOnNextBagLoad:(BOOL)arg1 ;
-(void)arrayForKey:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)_valueForKey:(id)arg1 ofType:(unsigned long long)arg2 completion:(/*^block*/id)arg3 ;
-(SSBagProfileConfig *)profileConfig;
-(void)boolForKey:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)dictionaryForKey:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)doubleForKey:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)integerForKey:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)stringForKey:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)URLForKey:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(id)arrayPromiseForKey:(id)arg1 ;
-(id)boolPromiseForKey:(id)arg1 ;
-(id)dictionaryPromiseForKey:(id)arg1 ;
-(id)doublePromiseForKey:(id)arg1 ;
-(id)integerPromiseForKey:(id)arg1 ;
-(id)stringPromiseForKey:(id)arg1 ;
-(id)URLPromiseForKey:(id)arg1 ;
-(id)_URLWithCookieNames:(id)arg1 ;
-(BOOL)ignoreDiskCacheOnNextBagLoad;
-(NSString *)logKey;
-(id)resetCaches;
-(NSDictionary *)backingDictionary;
-(void)_assertIfKeyWasNotRegistered:(id)arg1 ;
-(void)_assertIfKey:(id)arg1 doesNotReturnValueType:(unsigned long long)arg2 ;
-(SSUniqueExecutionQueue *)loadBagQueue;
-(id)_createLoadBagURLOperationWithCookieNames:(id)arg1 timeout:(double)arg2 ;
-(NSObject*<OS_dispatch_queue>)notificationsQueue;
-(void)_dispatchBarrierAsync:(/*^block*/id)arg1 ;
-(id)_initWithProfileConfig:(id)arg1 ;
-(BOOL)URLIsTrusted:(id)arg1 ;
-(BOOL)canHandleTrustedDomains;
-(NSObject*<OS_dispatch_queue>)accessQueue;
-(BOOL)isExpired;
-(id)URLCache;
@end

