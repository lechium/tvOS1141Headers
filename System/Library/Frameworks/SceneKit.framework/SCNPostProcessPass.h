/*
* This header is generated by classdump-dyld 1.0
* on Friday, May 31, 2019 at 2:17:25 PM Mountain Standard Time
* Operating System: Version 11.3 (Build 15L211)
* Image Source: /System/Library/Frameworks/SceneKit.framework/SceneKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol MTLTexture, MTLComputePipelineState, MTLBuffer, MTLRenderPipelineState;
#import <SceneKit/SceneKit-Structs.h>
@class MPSImageHistogram;

@interface SCNPostProcessPass : NSObject {

	unsigned long long _frameBufferFormat;
	unsigned long long _frameBufferWidth;
	unsigned long long _frameBufferHeight;
	unsigned long long _postProcessConstants;
	float _scaleFactor;
	id<MTLTexture> _dofColorCoCTexture;
	id<MTLTexture> _dofCoCTextureA;
	id<MTLTexture> _dofCoCTextureB;
	id<MTLTexture> _dofBlurTexture;
	int _dofSampleCount;
	id<MTLComputePipelineState> _dofPipelineState[5];
	id<MTLBuffer> _dofKernel;
	id<MTLTexture> _mbTileMax;
	id<MTLTexture> _mbNeighborMax;
	id<MTLTexture> _mbTexture;
	id<MTLTexture> _mbColor;
	id<MTLRenderPipelineState> _mbBlurPipelineState;
	id<MTLComputePipelineState> _mbVelocityPipelineState[3];
	id<MTLTexture> _bloomTextureA;
	id<MTLTexture> _bloomTextureB;
	id<MTLRenderPipelineState> _bloomBlurPipelineState[15];
	id<MTLComputePipelineState> _downSampleBloomDOFPipelineState[6];
	id<MTLRenderPipelineState> _postProcessPipelineState;
	MPSImageHistogram* _histogramBuilder;
	id<MTLBuffer> _framebufferHistogramBuffer;
	id<MTLBuffer> _luminanceHistogramBuffer;
	id<MTLComputePipelineState> _histogramAnalyserPipelineState;
	id<MTLBuffer> _histogramAnalysisBuffer;
	id<MTLComputePipelineState> _histogramImmediateLuminancePipelineState;
	id<MTLComputePipelineState> _histogramAdaptativeLuminancePipelineState;
	id<MTLTexture> _frameLumTexture;
	id<MTLTexture> _averageLumTexture;
	id<MTLBuffer> _autoExposureParametersBuffer;
	id<MTLRenderPipelineState> _frameLuminancePipelineState;
	id<MTLComputePipelineState> _frameLuminanceCS;
	id<MTLComputePipelineState> _slidingLuminancePipelineState;
	id<MTLComputePipelineState> _adaptativeLuminancePipelineState;
	id<MTLComputePipelineState> _fixedLuminancePipelineState;
	unsigned _frameIndex;

}
-(void)dealloc;
-(void)_computeDofUniforms:(SCD_Struct_SC113*)arg1 camera:(_C3DCamera*)arg2 ;
-(void)_createFramebufferDependantResourcesWithRenderContext:(id)arg1 renderPassDesc:(id)arg2 postProcessConstants:(unsigned long long)arg3 ;
-(unsigned)_computeBloomBlurUniforms:(SCD_Struct_SC114*)arg1 textureSize:(float)arg2 radius:(BOOL)arg3 ;
-(void)setupWithContext:(SCD_Struct_SC115*)arg1 ;
-(void)executeWithContext:(SCD_Struct_SC115*)arg1 ;
@end

