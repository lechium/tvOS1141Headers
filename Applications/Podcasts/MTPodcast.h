//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSManagedObject.h"

#import "IMMetricsDataSource.h"

@class NSSet, NSString;

@interface MTPodcast : NSManagedObject <IMMetricsDataSource>
{
}

+ (long long)storeCollectionIdForRedirectURL:(id)arg1;	// IMP=0x000000010001e9d0
+ (id)redirectURLForStoreCollectionId:(long long)arg1;	// IMP=0x000000010001e8b4
+ (_Bool)isRedirectURL:(id)arg1;	// IMP=0x000000010001e804
+ (void)setRemovePlayedEpisodesSetting:(long long)arg1 forPodcastUuid:(id)arg2;	// IMP=0x000000010001de08
+ (double)timeIntervalForUpdate:(long long)arg1;	// IMP=0x000000010001dd58
+ (long long)updateIntervalDefaultValue;	// IMP=0x000000010001dcf8
+ (unsigned long long)totalUnplayedCount;	// IMP=0x000000010001d3ec
+ (id)insertNewPodcastInManagedObjectContext:(id)arg1 subscribed:(_Bool)arg2 feedUrl:(id)arg3 title:(id)arg4 author:(id)arg5 provider:(id)arg6 category:(id)arg7 imageUrl:(id)arg8 description:(id)arg9;	// IMP=0x000000010001cfa0
+ (id)insertNewPodcastInManagedObjectContext:(id)arg1 subscribed:(_Bool)arg2 feedUrl:(id)arg3 title:(id)arg4 author:(id)arg5 provider:(id)arg6 category:(id)arg7 imageUrl:(id)arg8 description:(id)arg9 adamId:(long long)arg10;	// IMP=0x000000010001ce10
+ (id)latestEpisodeUuidForPodcastUuid:(id)arg1 ctx:(id)arg2;	// IMP=0x000000010006fcd4
+ (id)podcastUuidForEpisodeUuid:(id)arg1;	// IMP=0x000000010006f970
+ (id)podcastUuidForFeedUrl:(id)arg1;	// IMP=0x000000010006f90c
+ (id)podcastUuidForFeedUrlString:(id)arg1;	// IMP=0x000000010006f6a0
+ (id)predicateForAllPodcasts;	// IMP=0x000000010006f660
+ (int)autoDownloadDefaultValue;	// IMP=0x000000010006f604
+ (id)sortDescriptorsForNewestToOldest:(_Bool)arg1;	// IMP=0x000000010006f2b4
+ (id)sortDescriptorsForNewestOnTop;	// IMP=0x000000010006f108
+ (id)sortDescriptorsForOldestOnTop;	// IMP=0x000000010006efa4
+ (long long)deletePlayedEpisodesDefaultValue;	// IMP=0x000000010006eb34
+ (long long)episodeLimitDefaultValue;	// IMP=0x000000010006ea78
+ (id)_imageFetchQueue;	// IMP=0x00000001000a8310
+ (void)_downloadArtworkForPodcastUuid:(id)arg1;	// IMP=0x00000001000a8298
+ (id)_defaultPlaceholderArtworkWithSize:(struct CGSize)arg1;	// IMP=0x00000001000a8218
+ (void)fetchArtworkForPodcastUuid:(id)arg1 size:(struct CGSize)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001000a7d5c
+ (id)artworkForPodcastUuid:(id)arg1 size:(struct CGSize)arg2;	// IMP=0x00000001000a7c7c
+ (id)predicateForPodcastStoreId:(long long)arg1;	// IMP=0x000000010014fb98
+ (id)predicateForPodcastUUID:(id)arg1;	// IMP=0x000000010014fb54
+ (id)predicateForPodcastWithTitle:(id)arg1;	// IMP=0x000000010014fabc
+ (id)predicateForPodcastWithFeedUrl:(id)arg1;	// IMP=0x000000010014f914
+ (id)predicateForExcludingExplicitBasedOnSetting;	// IMP=0x000000010014f894
+ (id)predicateForUpdateInterval:(long long)arg1;	// IMP=0x000000010014f780
+ (id)predicateForUpdatablePodcasts;	// IMP=0x000000010014f608
+ (id)predicateForAutoDownloadType:(int)arg1;	// IMP=0x000000010014f5c4
+ (id)predicateForAutoDownloadEnabled;	// IMP=0x000000010014f494
+ (id)predicateForOrphanedFromCloud:(_Bool)arg1;	// IMP=0x000000010014f404
+ (id)predicateForSubscribedAndNotHidden:(_Bool)arg1;	// IMP=0x000000010014f364
+ (id)predicateForSubscribed:(_Bool)arg1;	// IMP=0x000000010014f2d4
+ (id)userDefaultPropertiesAffectingPredicates;	// IMP=0x000000010014f21c
+ (id)sortDescriptorsForTitle;	// IMP=0x000000010015de58
+ (id)sortDescriptorsForDateAdded;	// IMP=0x000000010015dd64
+ (id)sortDescriptorsForRecentlyUpdated;	// IMP=0x000000010015dc70
+ (id)sortDescriptorsForLastDatePlayed;	// IMP=0x000000010015dbbc
+ (id)sortDescriptorsForAllPodcasts;	// IMP=0x000000010015db60
+ (id)sortDescriptorsForManualOrder;	// IMP=0x000000010015daac
- (_Bool)updateCursorPosition:(_Bool)arg1;	// IMP=0x000000010001ece8
- (unsigned long long)countOfMyEpisodes;	// IMP=0x000000010001eacc
- (id)bestFeedURLExcludingRedirectURL:(_Bool)arg1;	// IMP=0x000000010001e3e4
- (id)redirectURL;	// IMP=0x000000010001e3a8
- (id)countOfUnplayedEpisodes;	// IMP=0x000000010001e314
- (id)countOfNewEpisodes;	// IMP=0x000000010001e280
- (id)colorTheme;	// IMP=0x000000010001e1ec
- (void)updateLastTouchDate;	// IMP=0x000000010001e1b0
- (void)resetGoDark;	// IMP=0x000000010001e128
@property(nonatomic, getter=isAuthenticatedDark) _Bool authenticatedDark;
@property(readonly, nonatomic, getter=isPastAutodownloadDark) _Bool autodownloadDark;
@property(readonly, nonatomic, getter=isPastFeedDark) _Bool feedDark;
@property(readonly, nonatomic, getter=isDark) _Bool dark;
@property(nonatomic) _Bool orphanedFromCloud; // @dynamic orphanedFromCloud;
- (id)twitterShareURL;	// IMP=0x000000010001dc4c
- (id)shareURL;	// IMP=0x000000010001dbd8
- (id)bestAvailableStoreCleanURL;	// IMP=0x000000010001d9ec
- (_Bool)isSharable;	// IMP=0x000000010001d9b0
- (id)bestDescription;	// IMP=0x000000010001d944
- (void)updateEpisodesMetadataIdentifiers;	// IMP=0x000000010001d824
@property(nonatomic) _Bool subscribed; // @dynamic subscribed;
@property(retain, nonatomic) NSString *updatedFeedURL; // @dynamic updatedFeedURL;
@property(retain, nonatomic) NSString *title; // @dynamic title;
- (id)nextEpisodeToPlay;	// IMP=0x0000000100073794
- (id)episodesInSeasonNumber:(long long)arg1 oldestEpisodesFirst:(_Bool)arg2 excludePlayed:(_Bool)arg3 excludeExplicit:(long long)arg4 limit:(unsigned long long)arg5;	// IMP=0x000000010007337c
- (id)episodesInSeasonNumber:(long long)arg1 oldestEpisodesFirst:(_Bool)arg2;	// IMP=0x0000000100073364
- (id)episodesInSeasonNumber:(long long)arg1;	// IMP=0x000000010007318c
- (id)episodesInLatestSeason;	// IMP=0x0000000100072fc0
- (long long)latestSeasonNumber;	// IMP=0x0000000100072ca0
- (id)seasonNumbers;	// IMP=0x0000000100072a30
- (_Bool)hasMultipleSeasons;	// IMP=0x00000001000729e0
- (_Bool)hasAtLeastOneSeason;	// IMP=0x00000001000727d4
- (id)_fetchRequestForDistinctSeasons;	// IMP=0x00000001000725f8
- (id)oldestEpisodeInLatestSeasonOrShowExcludingPlayed:(_Bool)arg1 excludeExplicit:(long long)arg2;	// IMP=0x0000000100072370
- (id)oldestEpisodeInLatestSeasonOrShow;	// IMP=0x000000010007235c
- (id)_latestOrOldestEpisode:(_Bool)arg1 restrictToUserEpisodes:(_Bool)arg2 excludePlayed:(_Bool)arg3 excludeExplicit:(long long)arg4 excludingEpisodeUuid:(id)arg5 episodeTypeFilter:(long long)arg6;	// IMP=0x0000000100071d10
- (id)_latestOrOldestEpisode:(_Bool)arg1 restrictToUserEpisodes:(_Bool)arg2 excludePlayed:(_Bool)arg3 excludeExplicit:(long long)arg4 episodeTypeFilter:(long long)arg5;	// IMP=0x0000000100071cf8
- (id)_latestOrOldestEpisode:(_Bool)arg1 restrictToUserEpisodes:(_Bool)arg2 excludePlayed:(_Bool)arg3 excludeExplicit:(long long)arg4 excludingEpisodeUuid:(id)arg5;	// IMP=0x0000000100071ce8
- (id)_latestOrOldestEpisode:(_Bool)arg1 restrictToUserEpisodes:(_Bool)arg2 excludePlayed:(_Bool)arg3 excludeExplicit:(long long)arg4;	// IMP=0x0000000100071cd8
- (id)_latestOrOldestEpisode:(_Bool)arg1 restrictToUserEpisodes:(_Bool)arg2 excludePlayed:(_Bool)arg3;	// IMP=0x0000000100071cc8
- (id)newestEpisodeUuid;	// IMP=0x0000000100071c30
- (id)oldestUserEpisodeNotPlayedExcludingExplicit:(long long)arg1;	// IMP=0x0000000100071c10
- (id)oldestUserEpisodeExcludingExplicit:(long long)arg1;	// IMP=0x0000000100071bf0
- (id)oldestUserEpisode;	// IMP=0x0000000100071be0
- (id)oldestEpisodeNotPlayedExcludingExplicit:(long long)arg1;	// IMP=0x0000000100071bc0
- (id)oldestEpisodeNotPlayed;	// IMP=0x0000000100071bb0
- (id)oldestFullEpisode;	// IMP=0x0000000100071b90
- (id)oldestEpisodeExcludingExplicit:(long long)arg1;	// IMP=0x0000000100071b70
- (id)oldestEpisode;	// IMP=0x0000000100071b60
- (id)newestUserEpisodeNotPlayedExcludingExplicit:(long long)arg1;	// IMP=0x0000000100071b40
- (id)newestUserEpisodeExcludingExplicit:(long long)arg1;	// IMP=0x0000000100071b20
- (id)newestEpisodeNotPlayedExcludingExplicit:(long long)arg1;	// IMP=0x0000000100071b00
- (id)newestFullEpisode;	// IMP=0x0000000100071ae0
- (id)newestEpisode;	// IMP=0x0000000100071acc
- (id)newestEpisodeExcludingUuid:(id)arg1 excludeExplicit:(long long)arg2;	// IMP=0x0000000100071aa4
- (id)firstUserEpisodeNotPlayed;	// IMP=0x0000000100071620
- (id)_episodesNextToEpisode:(id)arg1 after:(_Bool)arg2 usePlayOrder:(_Bool)arg3 restrictToUserEpisodes:(_Bool)arg4 excludePlayed:(_Bool)arg5 excludeExplicit:(long long)arg6 limit:(long long)arg7;	// IMP=0x0000000100070fbc
- (id)_episodeNextToEpisode:(id)arg1 after:(_Bool)arg2 usePlayOrder:(_Bool)arg3 restrictToUserEpisodes:(_Bool)arg4 excludePlayed:(_Bool)arg5 excludeExplicit:(long long)arg6;	// IMP=0x0000000100070f58
- (id)_episodeBeforeEpisode:(id)arg1 usePlayOrder:(_Bool)arg2 restrictToUserEpisodes:(_Bool)arg3 excludePlayed:(_Bool)arg4;	// IMP=0x0000000100070f2c
- (id)_episodeAfterEpisode:(id)arg1 usePlayOrder:(_Bool)arg2 restrictToUserEpisodes:(_Bool)arg3 excludePlayed:(_Bool)arg4 excludeExplicit:(long long)arg5;	// IMP=0x0000000100070efc
- (id)_episodeAfterEpisode:(id)arg1 usePlayOrder:(_Bool)arg2 restrictToUserEpisodes:(_Bool)arg3 excludePlayed:(_Bool)arg4;	// IMP=0x0000000100070eec
- (id)episodeAfterEpisode:(id)arg1;	// IMP=0x0000000100070ed4
- (id)episodeOlderThanEpisode:(id)arg1;	// IMP=0x0000000100070ebc
- (id)episodeNewerThanEpisode:(id)arg1;	// IMP=0x0000000100070ea4
- (id)episodeNewerThanEpisode:(id)arg1 excludePlayed:(_Bool)arg2;	// IMP=0x0000000100070e88
- (id)userEpisodeNewerThanEpisode:(id)arg1 excludePlayed:(_Bool)arg2 excludeExplicit:(long long)arg3;	// IMP=0x0000000100070e64
- (id)episodesAfterEpisode:(id)arg1 restrictToUserEpisodes:(_Bool)arg2;	// IMP=0x0000000100070e24
- (id)userEpisodesAfterEpisode:(id)arg1;	// IMP=0x0000000100070de8
- (id)userEpisodeAfterEpisode:(id)arg1;	// IMP=0x0000000100070dd0
- (id)mostRecentlyManuallyAddedEpisode;	// IMP=0x00000001000709a0
- (id)mostRecentlyPlayedEpisodeExcludingEpisodeUuid:(id)arg1 restrictedToLibrary:(_Bool)arg2 excludeExplicit:(long long)arg3;	// IMP=0x0000000100070314
- (id)mostRecentlyPlayedEpisodeExcludingEpisodeUuid:(id)arg1 restrictedToLibrary:(_Bool)arg2;	// IMP=0x0000000100070304
- (id)mostRecentlyPlayedEpisodeExcludingEpisodeUuid:(id)arg1;	// IMP=0x00000001000702f4
- (id)mostRecentlyPlayedEpisodeRestrictedToLibrary:(_Bool)arg1;	// IMP=0x00000001000702e0
- (id)mostRecentlyPlayedEpisodeExcludingExplicit:(long long)arg1;	// IMP=0x00000001000702c4
- (id)mostRecentlyPlayedEpisode;	// IMP=0x00000001000702b4
- (id)episodeToResume;	// IMP=0x0000000100070058
- (int)autoDownloadResolvedValue;	// IMP=0x000000010006f5b0
- (_Bool)autodownloadDefault;	// IMP=0x000000010006f5a0
@property(nonatomic) _Bool playbackNewestToOldest;
- (id)sortDescriptorsForPlayOrder;	// IMP=0x000000010006f26c
- (id)sortDescriptorsForSortOrder;	// IMP=0x000000010006ed50
@property(nonatomic) _Bool sortAscending;
@property(nonatomic) long long showTypeSetting; // @dynamic showTypeSetting;
- (_Bool)deletePlayedEpisodesResolvedValue;	// IMP=0x000000010006ead4
- (long long)episodeLimitResolvedValue;	// IMP=0x000000010006ea24
- (_Bool)isSerialShowTypeInFeed;	// IMP=0x000000010006e9c4
- (long long)showTypeInFeedResolvedValue;	// IMP=0x000000010006e968
- (long long)showTypeResolvedValue;	// IMP=0x000000010006e944
- (_Bool)_stateForFlag:(long long)arg1;	// IMP=0x000000010006e904
@property(retain, nonatomic) NSString *webpageURL; // @dynamic webpageURL;
@property(retain, nonatomic) NSString *showTypeInFeed; // @dynamic showTypeInFeed;
@property(retain, nonatomic) NSString *imageURL; // @dynamic imageURL;
@property(nonatomic) double updateAvg; // @dynamic updateAvg;
@property(nonatomic) double updateStdDev; // @dynamic updateStdDev;
@property(nonatomic) double feedChangedDate; // @dynamic feedChangedDate;
@property(retain, nonatomic) NSString *itemDescription; // @dynamic itemDescription;
@property(retain, nonatomic) NSString *author; // @dynamic author;
@property(nonatomic) long long flags; // @dynamic flags;
- (void)_setFlag:(long long)arg1 state:(_Bool)arg2;	// IMP=0x000000010006e0c4
@property(nonatomic) _Bool needsArtworkUpdate;
@property(nonatomic) double modifiedDate; // @dynamic modifiedDate;
@property(nonatomic) double lastDatePlayed; // @dynamic lastDatePlayed;
@property(nonatomic) _Bool isExplicit;
@property(nonatomic) _Bool importing;
@property(nonatomic) long long deletePlayedEpisodes; // @dynamic deletePlayedEpisodes;
@property(nonatomic) _Bool hasBeenSynced;
- (void)markPlaylistsForUpdate;	// IMP=0x000000010006dc80
- (id)currentFeedURL;	// IMP=0x000000010006db34
- (void)fetchArtworkWithSize:(struct CGSize)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000a8178
- (id)artworkWithSize:(struct CGSize)arg1;	// IMP=0x00000001000a80ec
- (id)metricsAdditionalData;	// IMP=0x00000001001997ac
- (id)metricsContentIdentifier;	// IMP=0x0000000100199638

// Remaining properties
@property(nonatomic) double addedDate; // @dynamic addedDate;
@property(readonly, nonatomic) _Bool autoDownload; // @dynamic autoDownload;
@property(nonatomic) int autoDownloadType; // @dynamic autoDownloadType;
@property(retain, nonatomic) NSString *category; // @dynamic category;
@property(nonatomic) long long darkCount; // @dynamic darkCount;
@property(nonatomic) long long darkCountLocal; // @dynamic darkCountLocal;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) double downloadedDate; // @dynamic downloadedDate;
@property(nonatomic) long long episodeLimit; // @dynamic episodeLimit;
@property(retain, nonatomic) NSSet *episodes; // @dynamic episodes;
@property(retain, nonatomic) NSString *feedURL; // @dynamic feedURL;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool hidden; // @dynamic hidden;
@property(nonatomic) long long keepEpisodes; // @dynamic keepEpisodes;
@property(nonatomic) double lastStoreEpisodesInfoCheckDate; // @dynamic lastStoreEpisodesInfoCheckDate;
@property(nonatomic) double lastStorePodcastInfoCheckDate; // @dynamic lastStorePodcastInfoCheckDate;
@property(nonatomic) double lastTouchDate; // @dynamic lastTouchDate;
@property(retain, nonatomic) NSString *nextEpisodeUuid; // @dynamic nextEpisodeUuid;
@property(nonatomic) _Bool notifications; // @dynamic notifications;
@property(retain, nonatomic) NSSet *playlistSettings; // @dynamic playlistSettings;
@property(retain, nonatomic) NSSet *playlists; // @dynamic playlists;
@property(nonatomic) long long podcastPID; // @dynamic podcastPID;
@property(retain, nonatomic) NSString *provider; // @dynamic provider;
@property(nonatomic) _Bool showPlacardForOrphanedFromCloud; // @dynamic showPlacardForOrphanedFromCloud;
@property(nonatomic) _Bool showPlacardForRemovePlayedEpisodes; // @dynamic showPlacardForRemovePlayedEpisodes;
@property(nonatomic) _Bool showPlacardForSavedEpisodes; // @dynamic showPlacardForSavedEpisodes;
@property(nonatomic) long long sortOrder; // @dynamic sortOrder;
@property(retain, nonatomic) NSString *storeCleanURL; // @dynamic storeCleanURL;
@property(nonatomic) long long storeCollectionId; // @dynamic storeCollectionId;
@property(retain, nonatomic) NSString *storeShortURL; // @dynamic storeShortURL;
@property(readonly) Class superclass;
@property(nonatomic) long long updateInterval; // @dynamic updateInterval;
@property(nonatomic) double updatedDate; // @dynamic updatedDate;
@property(retain, nonatomic) NSString *uuid; // @dynamic uuid;

@end

