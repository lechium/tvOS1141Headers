/*
* This header is generated by classdump-dyld 1.0
* on Friday, May 31, 2019 at 2:20:46 PM Mountain Standard Time
* Operating System: Version 11.3 (Build 15L211)
* Image Source: /usr/lib/libcoreroutine.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class EKEventStore, NSObject, RTLearnedLocationManager, RTEventModelProvider;

@interface RTEventManager : NSObject {

	BOOL _accessToEventsGranted;
	EKEventStore* _eventStore;
	NSObject*<OS_dispatch_queue> _queue;
	RTLearnedLocationManager* _learnedLocationManager;
	RTEventModelProvider* _eventModelProvider;

}

@property (nonatomic,retain) EKEventStore * eventStore;                                      //@synthesize eventStore=_eventStore - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;                             //@synthesize queue=_queue - In the implementation block
@property (assign,nonatomic) BOOL accessToEventsGranted;                                     //@synthesize accessToEventsGranted=_accessToEventsGranted - In the implementation block
@property (nonatomic,retain) RTLearnedLocationManager * learnedLocationManager;              //@synthesize learnedLocationManager=_learnedLocationManager - In the implementation block
@property (nonatomic,retain) RTEventModelProvider * eventModelProvider;                      //@synthesize eventModelProvider=_eventModelProvider - In the implementation block
+(BOOL)reasonableDistanceBetweenEventLocation:(id)arg1 andLocation:(id)arg2 ;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(id)init;
-(NSObject*<OS_dispatch_queue>)queue;
-(RTLearnedLocationManager *)learnedLocationManager;
-(void)setLearnedLocationManager:(RTLearnedLocationManager *)arg1 ;
-(RTEventModelProvider *)eventModelProvider;
-(void)setEventModelProvider:(RTEventModelProvider *)arg1 ;
-(void)fetchNextPredictedLocationsOfInterestFromLocation:(id)arg1 startDate:(id)arg2 timeInterval:(double)arg3 withHandler:(/*^block*/id)arg4 ;
-(void)fetchPredictedLocationsOfInterestOnDate:(id)arg1 withHandler:(/*^block*/id)arg2 ;
-(void)_fetchPredictedLocationsOfInterestBetweenStartDate:(id)arg1 endDate:(id)arg2 withHandler:(/*^block*/id)arg3 ;
-(void)fetchPredictedLocationsOfInterestBetweenStartDate:(id)arg1 endDate:(id)arg2 withHandler:(/*^block*/id)arg3 ;
-(id)initWithEventModelProvider:(id)arg1 learnedLocationManager:(id)arg2 queue:(id)arg3 ;
-(id)accessDeniedError;
-(id)eventsBetweenStartDate:(id)arg1 andEndDate:(id)arg2 calendars:(id)arg3 ;
-(id)eventsBetweenStartDate:(id)arg1 andEndDate:(id)arg2 ;
-(id)eventsSortedByEndDateBetweenStartDate:(id)arg1 andEndDate:(id)arg2 ;
-(id)eventsSortedByStartDateBetweenStartDate:(id)arg1 andEndDate:(id)arg2 ;
-(id)eventsSortedByStartDateBetweenStartDate:(id)arg1 andEndDate:(id)arg2 calendars:(id)arg3 ;
-(id)calendars;
-(id)nextPredictedLocationsOfInterestCalendars;
-(void)fetchCurrentlyInEventWithHandler:(/*^block*/id)arg1 ;
-(void)fetchNextFreeStartDateWithHandler:(/*^block*/id)arg1 ;
-(void)fetchLastEventEndDateWithHandler:(/*^block*/id)arg1 ;
-(void)fetchFreeDateIntervalsBetweenStartDate:(id)arg1 endDate:(id)arg2 filterAllDayEvents:(BOOL)arg3 filterFreeTimeEvents:(BOOL)arg4 handler:(/*^block*/id)arg5 ;
-(void)fetchEventsBetweenStartDate:(id)arg1 andEndDate:(id)arg2 withHandler:(/*^block*/id)arg3 ;
-(void)_fetchEventsBetweenStartDate:(id)arg1 endDate:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)fetchEventsBetweenStartDate:(id)arg1 endDate:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)_fetchPredictedLocationsOfInterestOnDate:(id)arg1 withHandler:(/*^block*/id)arg2 ;
-(void)_fetchLocationOfInterestForEvent:(id)arg1 withHandler:(/*^block*/id)arg2 ;
-(void)_fetchPredictedLocationOfInterestAtEvent:(id)arg1 withHandler:(/*^block*/id)arg2 ;
-(EKEventStore *)eventStore;
-(void)setEventStore:(EKEventStore *)arg1 ;
-(BOOL)accessToEventsGranted;
-(void)setAccessToEventsGranted:(BOOL)arg1 ;
@end

